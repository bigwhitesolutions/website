# Disable triggering from code updates to repo
trigger: none

# Set up build pipeline to trigger release on completion
resources:
  pipelines:
    - pipeline: shaunpearsonDevBuild
      source: shaun-pearson.dev-build
      trigger:
        branches:
          - main

steps:
  - download: shaunpearsonDevBuild

  - task: TerraformInstaller@0
    displayName: install terraform
    inputs:
      terraformVersion: 0.14.8

  - task: TerraformCLI@0
    displayName: 'terraform init'
    inputs:
      command: init
      backendType: azurerm
      backendServiceArm: 'shaunpearson.dev'
      ensureBackend: true
      backendAzureRmResourceGroupName: 'shaunpearsonstate'
      backendAzureRmResourceGroupLocation: 'eastus'
      backendAzureRmStorageAccountName: 'shaunpearsonstate'
      backendAzureRmStorageAccountSku: 'Standard_LRS'
      backendAzureRmContainerName: 'shaunpearsonstate'
      backendAzureRmKey: shaunpearsondev.tfstate
      workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure'

  - task: TerraformCLI@0
    displayName: 'terraform plan'
    inputs:
      command: plan
      publishPlanResults: 'website_plan'
      commandOptions: '-out=$(System.DefaultWorkingDirectory)/terraform.tfplan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/infrastructure'
      environmentServiceName: 'shaunpearson.dev'

  # - task: TerraformCLI@0
  #   displayName: 'terraform show'
  #   inputs:
  #     command: show
  #     inputTargetPlanOrStateFilePath: '$(System.DefaultWorkingDirectory)/terraform.tfplan'

  - task: TerraformCLI@0
    displayName: 'terraform apply'
    condition: and(succeeded(), eq(variables['TERRAFORM_PLAN_HAS_CHANGES'], 'true'))
    # condition: and(succeeded(), eq(variables['TERRAFORM_PLAN_HAS_CHANGES'], 'true'), eq(variables['TERRAFORM_PLAN_HAS_DESTROY_CHANGES'], 'false'))
    inputs:
      command: apply
      commandOptions: '$(System.DefaultWorkingDirectory)/terraform.tfplan'
      environmentServiceName: 'shaunpearson.dev'
